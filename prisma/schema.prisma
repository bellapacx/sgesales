generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  name        String
  password    String
  role        Role     @default(SALESPERSON)
  plateNumber String?
  sales       Sale[]
  createdAt   DateTime @default(now())
}

model Sale {
  id             Int             @id @default(autoincrement())
  date           DateTime        @default(now())
  salesPersonId  Int
  salesPerson    User            @relation(fields: [salesPersonId], references: [id])
  plateNumber    String
  products       ProductEntry[]
  cashReceived   Float
  cashDeposited  Float
  totalSales     Float            @default(0) // ðŸ’° Sum of all product totalSales
  difference     Float
  createdAt      DateTime        @default(now())
}

model Product {
  id           Int      @id @default(autoincrement())
  productCode  String   @unique
  productName  String
  price        Float    // ðŸ’° Unit price (ETB)
  createdAt    DateTime @default(now())
}

model ProductEntry {
  id               Int      @id @default(autoincrement())
  saleId           Int
  productCode      String
  productName      String
  received         Int
  sold             Int
  productReturned  Int
  price            Float    @default(0)  // ðŸ’° store unit price for that product at sale time
  totalSales       Float    @default(0) // ðŸ’° total = sold * product.price
  emptyReturned    Int
  sale             Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
}

model Inventory {
  id            Int      @id @default(autoincrement())
  productCode   String   @unique
  productName   String
  stockQuantity Int      @default(0)
  updatedAt     DateTime @updatedAt
}

enum Role {
  ADMIN
  SALESPERSON
}
